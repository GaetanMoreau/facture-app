{% extends 'base.html.twig' %}

{% block title %}Liste des dépenses - Facture&Devis{% endblock %}

{% block body %}
    <div class="example-wrapper">
        <h1>Dépenses</h1>
        {% if expenses|length < 1 %}
            <div class="list__header">
                <p>Aucune dépense</p>
                <a class="btn btn-primary" href="{{ path("app_expense_add") }}">Nouvelle dépense</a>
            </div>
        {% else %}
            <div class="list__header">
                <p>{{ expenses|length }} {{ (expenses|length > 1) ? 'dépenses' : 'dépense' }}
                </p>
                <a class="btn btn-primary" href="{{ path("app_expense_add") }}"><img src="{{ asset('images/icons/icon-add.svg')}}">Nouvelle dépense</a>
            </div>
            <table>
                <thead>
                <tr>
                    <th>Dépense n°</th>
                    <th>Libellé</th>
                    <th>Date</th>
                    <th>Montant</th>
                    <th>État</th>
                    <th>Actions</th>
                </tr>
                </thead>
                <tbody>
                {% for expense in expenses %}
                    <tr>
                        <td>{{ expense.getId() }}</td>
                        <td>{{ expense.getName() }}</td>
                        <td>{{ expense.getDate().format('d/m/Y') }}</td>
                        <td>{{ expense.getAmount() }} € TTC</td>
                        <td>{{ expense.getStatus() }}</td>
                        <td>
                            <div class="dropdown">
                                <div class="dropdown__togle__container">
                                    <a class="dropdown__toggle"
                                       href="{{ path('app_expense_id', { 'id': expense.id }) }}"><img src="{{ asset('images/icons/icon-views.svg')}}"> Afficher</a>
                                    <button class="dropdown__toggle menu__toggle" onclick="toggleDropdown(this)" aria-haspopup="true"
                                            aria-expanded="false">
                                        >
                                    </button>
                                </div>

                                <div class="dropdown__menu" id="dropdown__menu" style="display: none;">
                                    <a class="dropdown__toggle"
                                       href="{{ path('app_expense_edit', { 'id': expense.id }) }}"><img src="{{ asset('images/icons/icon-edit.svg')}}"> Modifier</a>

                                    <button class="dropdown__toggle" onclick="openModal(this)"><img src="{{ asset('images/icons/icon-delete.svg')}}">Supprimer</button>

                                    <div class="modal" id="modal">
                                        <div class="modal__container">
                                            <h2 class="modal__title">Êtes-vous sûr de vouloir supprimer ce client ?</h2>
                                            <p class="modal__content">Toute suppression est définitive et les données ne pourront être récupérées.</p>
                                            <div class="btn__container">
                                                <a class="btn btn-primary btn__warning delete-button"
                                                   href="{{ path('app_expense_delete', { 'id': expense.id }) }}">Supprimer</a>
                                                <button class="btn btn-primary cancel-button"
                                                        onclick="closeModal(this)" >Annuler</button>
                                            </div>
                                        </div>
                                    </div>

                                </div>
                            </div>
                        </td>
                    </tr>
                {% endfor %}
                </tbody>
            </table>
        {% endif %}
        <script>
            function toggleDropdown(button) {
                const dropdownMenu = button.parentNode.nextElementSibling;
                if (dropdownMenu.style.display === 'none') {
                    dropdownMenu.style.display = 'block';
                } else {
                    dropdownMenu.style.display = 'none';
                }
            }
            function openModal(button) {
                const modal = button.parentNode.querySelector('.modal');
                modal.style.display = 'flex';
            }

            function closeModal(button) {
                const modal = button.closest('.modal');
                modal.style.display = 'none';
            }

            function closeMenuOnClickOutside(event) {
                const dropdownMenus = document.querySelectorAll('.dropdown__menu');
                const menuToggles = document.querySelectorAll('.menu__toggle');

                dropdownMenus.forEach((dropdownMenu, index) => {
                    if (!dropdownMenu.contains(event.target) && !menuToggles[index].contains(event.target)) {
                        dropdownMenu.style.display = 'none';
                    }
                });
            }

            document.addEventListener('click', closeMenuOnClickOutside);
        </script>
    </div>
{% endblock %}
